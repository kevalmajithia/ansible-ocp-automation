
- name: Deploy Node.js Hello World App on OCP via GUI
  hosts: localhost
  gather_facts: false
  connection: local

  vars:
    app_name: nodejs-hello
    namespace: aap
    git_repo: "https://github.com/sclorg/nodejs-ex"

  tasks:

    - name: Create app from Git using oc new-app
      ansible.builtin.shell: >
        oc new-app {{ git_repo }} --name={{ app_name }} -n {{ namespace }} --kubeconfig={{ lookup('env', 'KUBECONFIG') }}

    - name: Expose Service to create Route
      ansible.builtin.shell: >
        oc expose svc/{{ app_name }} -n {{ namespace }} --kubeconfig={{ lookup('env', 'KUBECONFIG') }}

    - name: Configure Readiness Probe
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        state: patched
        kind: Deployment
        api_version: apps/v1
        namespace: "{{ namespace }}"
        name: "{{ app_name }}"
        merge_type: strategic
        definition:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ app_name }}"
                    readinessProbe:
                      httpGet:
                        path: /
                        port: 8080
                      initialDelaySeconds: 10
                      periodSeconds: 5

    - name: Configure Liveness Probe
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        state: patched
        kind: Deployment
        api_version: apps/v1
        namespace: "{{ namespace }}"
        name: "{{ app_name }}"
        merge_type: strategic
        definition:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ app_name }}"
                    livenessProbe:
                      httpGet:
                        path: /
                        port: 8080
                      initialDelaySeconds: 15
                      periodSeconds: 5
---
- name: Deploy Simple Nginx App on OpenShift (K8s-native)
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Create Deployment
      kubernetes.core.k8s:
        api_version: apps/v1
        kind: Deployment
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: simple-nginx-app
            namespace: aap
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: simple-nginx-app
            template:
              metadata:
                labels:
                  app: simple-nginx-app
              spec:
                containers:
                  - name: nginx
                    image: nginx:latest
                    ports:
                      - containerPort: 80

    - name: Create Service
      kubernetes.core.k8s:
        api_version: v1
        kind: Service
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: simple-nginx-svc
            namespace: aap
          spec:
            selector:
              app: simple-nginx-app
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80

    - name: Create Route
      kubernetes.core.k8s:
        api_version: route.openshift.io/v1
        kind: Route
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: simple-nginx-route
            namespace: aap
          spec:
            to:
              kind: Service
              name: simple-nginx-svc
            port:
              targetPort: 80
            tls:
              termination: edge
              insecureEdgeTerminationPolicy: Redirect
