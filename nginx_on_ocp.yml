---
- name: Deploy Nginx application on OpenShift (via oc commands)
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create Nginx DeploymentConfig
      ansible.builtin.command: |
        oc apply -f - <<EOF
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        metadata:
          name: nginx-app
          namespace: aap # CONFIRMED ROSA PROJECT NAME
        spec:
          replicas: 1
          selector:
            app: nginx-app
          template:
            metadata:
              labels:
                app: nginx-app
            spec:
              containers:
                - name: nginx
                  image: nginx:latest
                  ports:
                    - containerPort: 80
                  imagePullPolicy: IfNotPresent
          triggers:
            - type: ConfigChange
            - type: ImageChange
              imageChangeParams:
                automatic: true
                containerNames:
                  - nginx
                from:
                  kind: ImageStreamTag
                  name: nginx:latest
        EOF
      args:
        stdin: "{{ lookup('file', '/dev/stdin') }}" # Required for multiline input
      changed_when: true # Assume change
      register: oc_deploy_output
    - debug: var=oc_deploy_output.stdout_lines

    - name: Create Nginx Service
      ansible.builtin.command: |
        oc apply -f - <<EOF
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx-svc
          namespace: aap # CONFIRMED ROSA PROJECT NAME
        spec:
          selector:
            app: nginx-app
          ports:
            - protocol: TCP
              port: 80
              targetPort: 80
        EOF
      args:
        stdin: "{{ lookup('file', '/dev/stdin') }}"
      changed_when: true
      register: oc_svc_output
    - debug: var=oc_svc_output.stdout_lines

    - name: Create Nginx Route
      ansible.builtin.command: |
        oc apply -f - <<EOF
        apiVersion: route.openshift.io/v1
        kind: Route
        metadata:
          name: nginx-route
          namespace: aap # CONFIRMED ROSA PROJECT NAME
        spec:
          to:
            kind: Service
            name: nginx-svc
          port:
            targetPort: 80-tcp
          tls:
            termination: edge
            insecureEdgeTerminationPolicy: Redirect
        EOF
      args:
        stdin: "{{ lookup('file', '/dev/stdin') }}"
      changed_when: true
      register: oc_route_output
    - debug: var=oc_route_output.stdout_lines
